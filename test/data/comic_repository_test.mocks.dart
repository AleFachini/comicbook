// Mocks generated by Mockito 5.4.4 from annotations
// in sundevs/test/data/comic_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:sundevs/data/comic_repository.dart' as _i4;
import 'package:sundevs/data/utils/api_data_responses.dart' as _i2;
import 'package:sundevs/data/utils/details_api_response.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiResponse_0 extends _i1.SmartFake implements _i2.ApiResponse {
  _FakeApiResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDetailsApiResponse_1 extends _i1.SmartFake
    implements _i3.DetailsApiResponse {
  _FakeDetailsApiResponse_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ComicRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockComicRepository extends _i1.Mock implements _i4.ComicRepository {
  MockComicRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.ApiResponse> fetchIssues() => (super.noSuchMethod(
        Invocation.method(
          #fetchIssues,
          [],
        ),
        returnValue: _i5.Future<_i2.ApiResponse>.value(_FakeApiResponse_0(
          this,
          Invocation.method(
            #fetchIssues,
            [],
          ),
        )),
      ) as _i5.Future<_i2.ApiResponse>);

  @override
  _i5.Future<_i3.DetailsApiResponse> fetchIssueDetail(String? apiDetailUrl) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchIssueDetail,
          [apiDetailUrl],
        ),
        returnValue:
            _i5.Future<_i3.DetailsApiResponse>.value(_FakeDetailsApiResponse_1(
          this,
          Invocation.method(
            #fetchIssueDetail,
            [apiDetailUrl],
          ),
        )),
      ) as _i5.Future<_i3.DetailsApiResponse>);
}
